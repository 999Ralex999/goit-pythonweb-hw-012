import sys
import os
from logging.config import fileConfig

from alembic import context
from sqlalchemy import engine_from_config, pool

# üëá –î–æ–¥–∞—î–º–æ –±–∞–∑—É —Ç–∞ –º–æ–¥–µ–ª—ñ
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from app.core.config import settings
from app.models.base import Base
from app.models.user import User
from app.models.contact import Contact

# ‚¨áÔ∏è –ö–æ–Ω—Ñ—ñ–≥ Alembic
config = context.config
if config.config_file_name is not None:
    fileConfig(config.config_file_name)

# ‚¨áÔ∏è –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ URL –¥–æ –±–∞–∑–∏ (—á–µ—Ä–µ–∑ sync –¥—Ä–∞–π–≤–µ—Ä!)
config.set_main_option("sqlalchemy.url", settings.DB_SYNC_URL)

# ‚¨áÔ∏è –ú–µ—Ç–∞–¥–∞—Ç–∞ –¥–ª—è –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Å—Ö–µ–º
target_metadata = Base.metadata


def run_migrations_offline() -> None:
    """–ú—ñ–≥—Ä–∞—Ü—ñ—ó –≤ offline-—Ä–µ–∂–∏–º—ñ (–±–µ–∑ –∑‚Äô—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é)."""
    url = config.get_main_option("sqlalchemy.url")
    context.configure(
        url=url,
        target_metadata=target_metadata,
        literal_binds=True,
        dialect_opts={"paramstyle": "named"},
    )

    with context.begin_transaction():
        context.run_migrations()


def run_migrations_online() -> None:
    """–ú—ñ–≥—Ä–∞—Ü—ñ—ó –≤ online-—Ä–µ–∂–∏–º—ñ (–∑—ñ –∑‚Äô—î–¥–Ω–∞–Ω–Ω—è–º –¥–æ –±–∞–∑–∏)."""
    connectable = engine_from_config(
        config.get_section(config.config_ini_section, {}),
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )

    with connectable.connect() as connection:
        context.configure(connection=connection, target_metadata=target_metadata)

        with context.begin_transaction():
            context.run_migrations()


if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()
